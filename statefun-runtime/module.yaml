# Copyright 2020 Ververica GmbH
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#  http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
version: "1.0"
module:
  meta:
    type: remote
  spec:
    functions:
      - function:
          meta:
            kind: http
            type: ververica/counter
          spec:
            endpoint: http://python-worker:8000/statefun
            states:
              - fraud_count
            maxNumBatchRequests: 500
            timeout: 2min
      - function:
          meta:
            kind: http
            type: ververica/merchant
          spec:
            endpoint: http://python-worker:8000/statefun
            states:
              - merchant_score
            maxNumBatchRequests: 500
            timeout: 2min
      - function:
          meta:
            kind: http
            type: ververica/model
          spec:
            endpoint: http://python-worker:8000/statefun
            maxNumBatchRequests: 500
            timeout: 2min
      - function:
          meta:
            kind: http
            type: ververica/threshold
          spec:
            endpoint: http://python-worker:8000/statefun
            states:
              - threshold
            maxNumBatchRequests: 500
            timeout: 2min
      - function:
          meta:
            kind: http
            type: ververica/transaction-manager
          spec:
            endpoint: http://python-worker:8000/statefun
            states:
              - transaction
              - merchant_score
              - fraud_count
              - threshold
            maxNumBatchRequests: 500
            timeout: 2min
    ingresses:
      - ingress:
          meta:
            type: statefun.kafka.io/routable-protobuf-ingress
            id: ververica/transactions
          spec:
            address: kafka-broker:9092
            consumerGroupId: transaction-reader
            topics:
              - topic: transactions
                typeUrl: com.googleapis/workshop.Transaction
                targets:
                  - ververica/transaction-manager
      - ingress:
          meta:
            type: statefun.kafka.io/routable-protobuf-ingress
            id: ververica/confrimed-fraud
          spec:
            address: kafka-broker:9092
            consumerGroupId: confirm-fraud-reader
            topics:
              - topic: confirmed
                typeUrl: com.googleapis/workshop.ConfirmFraud
                targets:
                  - ververica/counter
      - ingress:
          meta:
            type: statefun.kafka.io/routable-protobuf-ingress
            id: ververica/custom-threshold
          spec:
            address: kafka-broker:9092
            consumerGroupId: custom-threshold-reader
            topics:
              - topic: thresholds
                typeUrl: com.googleapis/workshop.CustomThreshold
                targets:
                  - ververica/threshold
    egresses:
      - egress:
          meta:
            type: statefun.kafka.io/generic-egress
            id: ververica/kafka-egress
          spec:
            address: kafka-broker:9092
            deliverySemantic:
              type: exactly-once
              transactionTimeoutMillis: 100000

